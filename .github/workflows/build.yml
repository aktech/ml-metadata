name: Build ml-metadata

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Upgrade pip
      run: |
        python -m pip install --upgrade pip

    - name: Build the package for Python ${{ matrix.python-version }}
      run: |
        version="${{ matrix.python-version }}"
        DOCKER_SERVICE=manylinux-python$(echo "$version" | sed 's/\.//')
        docker compose build ${DOCKER_SERVICE}
        docker compose run ${DOCKER_SERVICE}

    - name: Test
      run: |
        pytest -vv

    - name: Upload wheel artifact for Python ${{ matrix.python-version }}
      uses: actions/upload-artifact@v4.4.0
      with:
        name: ml-metadata-wheel-py${{ matrix.python-version }}
        path: dist/*.whl

    - name: Install built wheel
      run: pip install dist/*.whl


  upload_to_pypi:
    name: Upload to PyPI
    runs-on: ubuntu-latest
    # Uncomment before putting in PR
    # if: (github.event_name == 'release' && startsWith(github.ref, 'refs/tags')) || (github.event_name == 'workflow_dispatch')
    needs: [build]
    environment:
      name: pypi
      url: https://pypi.org/p/ml-metadata/
    permissions:
      id-token: write
    steps:
      - name: Retrieve wheels
        uses: actions/download-artifact@v4.1.8
        with:
          merge-multiple: true
          path: wheels

      - name: List the build artifacts
        run: |
          ls -lAs wheels/

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.9
        with:
          packages_dir: wheels/
